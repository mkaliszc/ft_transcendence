CREATE DATABASE IF NOT EXISTS ${MARIADB_DATABASE};

CREATE USER IF NOT EXISTS '${MARIADB_USER}'@'%' IDENTIFIED BY '${MARIADB_PASSWORD}';
GRANT ALL PRIVILEGES ON ${MARIADB_DATABASE}.* TO '${MARIADB_USER}'@'%';

ALTER USER 'root'@'localhost' IDENTIFIED BY '${MARIADB_ROOT_PASSWORD}';
FLUSH PRIVILEGES;
USE ${MARIADB_DATABASE};

-- Table USERS
CREATE TABLE IF NOT EXISTS USERS (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(20) NOT NULL UNIQUE,
    email_adress VARCHAR(255) NOT NULL UNIQUE,
    hashed_password VARCHAR(255) NOT NULL,
    number_of_matches INT DEFAULT 0,
    number_of_win INT DEFAULT 0,
    number_of_lose INT DEFAULT 0,
    creation_date DATE DEFAULT CURRENT_DATE,
    last_update DATE DEFAULT CURRENT_DATE,
    avatar MEDIUMTEXT,
    twoFA BOOLEAN DEFAULT FALSE,
    twoFA_secret VARCHAR(255) DEFAULT NULL
) ENGINE=InnoDB;

-- Table MATCHES
CREATE TABLE IF NOT EXISTS MATCHES (
    match_id INT AUTO_INCREMENT PRIMARY KEY,
    game_duration TIME NOT NULL,
    match_date DATE DEFAULT CURRENT_DATE
) ENGINE=InnoDB;

-- Table USER_MATCH (relation entre USERS et MATCHES)
CREATE TABLE IF NOT EXISTS USER_MATCH (
    match_id INT,
    user_id INT,
    winner BOOLEAN DEFAULT FALSE,
    user_score INT NOT NULL CHECK (user_score >= 0),
    PRIMARY KEY (match_id, user_id),
    FOREIGN KEY (match_id) REFERENCES MATCHES(match_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES USERS(user_id) ON DELETE CASCADE
);

-- Table FRIENDSHIP
CREATE TABLE IF NOT EXISTS FRIENDSHIP (
    friendship_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id1 INT,
    user_id2 INT,
    status VARCHAR(20) NOT NULL DEFAULT 'none',
    creation_date DATE DEFAULT CURRENT_DATE,
    last_update DATE DEFAULT CURRENT_DATE,
    FOREIGN KEY (user_id1) REFERENCES USERS(user_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id2) REFERENCES USERS(user_id) ON DELETE CASCADE,
    CONSTRAINT unique_friendship UNIQUE (user_id1, user_id2),
    CHECK (user_id1 != user_id2)
) ENGINE=InnoDB;
